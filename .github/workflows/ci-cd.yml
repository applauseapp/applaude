name: Applause CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm install

    - name: Run linter
      run: npm run lint

    - name: Run build
      run: npm run build

  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run linter (Flake8)
      run: flake8 .

  # Deployment job is commented out as per best practice until fully configured
  # deploy-backend:
  #   needs: [frontend-ci, backend-ci]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' # Only run on push to main
  #
  #   steps:
  #   - uses: actions/checkout@v3
  #
  #   - name: Deploy to Production Server
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.PROD_HOST }}
  #       username: ${{ secrets.PROD_USERNAME }}
  #       key: ${{ secrets.PROD_SSH_KEY }}
  #       script: |
  #         cd /path/to/your/applause
  #         git pull origin main
  #         cd backend
  #         source venv/bin/activate
  #         pip install -r requirements.txt
  #         python manage.py migrate
  #         python manage.py collectstatic --noinput
  #         sudo supervisorctl restart applause-gunicorn
  #         sudo supervisorctl restart applause-celery
