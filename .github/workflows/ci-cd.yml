name: Applause CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Backend Tests
      working-directory: ./backend
      env:
        SECRET_KEY: 'test-secret-key-for-ci'
        DEBUG: 'True'
        DATABASE_URL: 'postgres://testuser:testpassword@localhost:5432/testdb'
        PAYSTACK_SECRET_KEY: 'dummy-paystack-key'
      run: |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py test

  frontend-ci:
    name: Frontend CI & Vercel Deployment
    runs-on: ubuntu-latest
    needs: backend-ci

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test

    - name: Deploy to Vercel
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
