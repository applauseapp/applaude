from django.db import models
from django.conf import settings

class Project(models.Model):
    """
    Represents a single mobile app project created by a user.
    """
    class AppType(models.TextChoices):
        ANDROID = 'ANDROID', 'Android'
        IOS = 'IOS', 'iOS'
        BOTH = 'BOTH', 'Both'

    class ProjectStatus(models.TextChoices):
        ANALYSIS_PENDING = 'ANALYSIS_PENDING', 'Analysis Pending'
        ANALYSIS_COMPLETE = 'ANALYSIS_COMPLETE', 'Analysis Complete'
        DESIGN_PENDING = 'DESIGN_PENDING', 'Design Pending'
        DESIGN_COMPLETE = 'DESIGN_COMPLETE', 'Design Complete'
        CODE_GENERATION = 'CODE_GENERATION', 'Code Generation'
        COMPLETED = 'COMPLETED', 'Completed'
        FAILED = 'FAILED', 'Failed'
        UPDATE_PENDING = 'UPDATE_PENDING', 'Update Pending'

    owner = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='projects')
    name = models.CharField(max_length=255)
    source_url = models.URLField(max_length=500)
    app_type = models.CharField(max_length=10, choices=AppType.choices)
    status = models.CharField(max_length=20, choices=ProjectStatus.choices, default=ProjectStatus.ANALYSIS_PENDING)
    status_message = models.CharField(max_length=255, blank=True, null=True, help_text="A user-facing message about the current status.")
    
    # AI-Generated Fields
    user_persona_document = models.TextField(blank=True, null=True, help_text="Generated by the Market Analyst Agent.")
    brand_palette = models.JSONField(blank=True, null=True, help_text="Generated by the Design Agent.")

    # Survey & Feedback Features
    enable_ux_survey = models.BooleanField(default=False, help_text="Enable User Experience survey in the app.")
    enable_pmf_survey = models.BooleanField(default=False, help_text="Enable Product Market Fit survey in the app.")
    pmf_survey_questions = models.JSONField(blank=True, null=True, help_text="Generated questions for the PMF survey.")
    
    # Aggregated analytics
    app_ratings_summary = models.JSONField(blank=True, null=True, help_text="Aggregated app ratings (e.g., {5: count, 4: count...})")
    user_feedback_summary = models.JSONField(blank=True, null=True, help_text="Summarized user textual feedback.")
    survey_response_analytics = models.JSONField(blank=True, null=True, help_text="Aggregated analytics from survey responses.")

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"{self.name} by {self.owner.username}"
